---
- name: All hosts up-to-date
  hosts: localhost
  become: true
  connection: local
  tasks:
    - name: Full system upgrade
      community.general.pacman:
        update_cache: true
        upgrade: true

- name: Setup global git vars 
  hosts: localhost
  become: no
  tasks:
    - name: setup git name
      git_config:
        name: user.name
        scope: global
        value: "Steve"
    - name: setup git user email
      git_config:
        name: user.email
        scope: global
        value: stvbyr@users.noreply.github.com

- name: Mount NAS 
  hosts: localhost
  become: true
  connection: local
  tasks:
    - name: Install sshfs
      community.general.pacman:
        name:
          - sshfs
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /etc/fuse.conf
        line: user_allow_other
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /etc/fuse.conf
        line: user_allow_other
    - name: "setup /etc/fstab for {{ lookup('env', 'NAS_USER') }}@{{ lookup('env', 'NAS_HOST') }} on {{ lookup('env', 'NAS_PORT') }}"
      mount:
        src: "{{ lookup('env', 'NAS_USER') }}@{{ lookup('env', 'NAS_HOST') }}:/"
        path: /mnt/nas
        opts: "identityfile=/home/{{ lookup('env', 'USER') }}/.ssh/id_ed25519,x-systemd.automount,port={{ lookup('env', 'NAS_PORT') }},_netdev,default_permissions,allow_other"
        boot: true
        state: mounted
        fstype: fuse.sshfs

# - name: Install KVM setup
#   hosts: localhost
#   become: true
#   connection: local
#   tasks:
#     - name: Full system upgrade
#       community.general.pacman:
#         name:
#           - qemu
#           - libvirt
#           - edk2-ovmf
#           - virt-manager
#           - swtpm
#           - iptables-nft
#           - dnsmasq
#           - virt-viewer 
#           - vde2 
#           - bridge-utils 
#           - openbsd-netcat 
#           - ebtables 
#           - libguestfs
#     - name: Enable libvirtd
#       ansible.builtin.systemd:
#         name: libvirtd
#         state: started
#         enabled: true
#     - name: Enable virtlogd
#       ansible.builtin.systemd:
#         name: virtlogd
#         state: started
#         enabled: true
#     - name: Enable unix_sock_group = "libvirt"
#       ansible.builtin.lineinfile:
#         path: /etc/libvirt/libvirtd.conf
#         regexp: '^unix_sock_group '
#         insertafter: '^#unix_sock_group '
#         line: 'unix_sock_group = "libvirt"'
#     - name: Enable unix_sock_rw_perms = "0770"
#       ansible.builtin.lineinfile:
#         path: /etc/libvirt/libvirtd.conf
#         regexp: '^unix_sock_rw_perms '
#         insertafter: '^#unix_sock_rw_perms '
#         line: 'unix_sock_rw_perms = "0770"'
#     - name: Add the user {{ lookup('env', 'USER') }} to libvirt-qemu group
#       ansible.builtin.user:
#         name: "{{ lookup('env', 'USER') }}"
#         groups: libvirt-qemu
#         append: yes

- name: Install socials stuff
  hosts: localhost
  become: true
  connection: local
  tasks:
    - name: Install core/community packages
      community.general.pacman:
        name:
          - spotify-launcher
          - keepassxc
          - neovim
      
    - name: Install aur packackages
      yay:
        name: visual-studio-code-bin

- name: Enable iommu for systemd
  hosts: localhost
  become: true
  connection: local
  tasks:
    - name: Find files that do not contain the word 'fallback'
      find:
        paths: "/efi/loader/entries"
        patterns: "*.conf"
        excludes: "*fallback*"
        recurse: yes
      register: result_files

    - name: Add 'intel_iommu=on iommu=pt' to options line
      ansible.builtin.replace:
        path: "{{ item.path }}"
        regexp: '^(options[^\n]*)(?<!intel_iommu=on iommu=pt)$'
        replace: '\1 intel_iommu=on iommu=pt'
      with_items: "{{ result_files.files }}"